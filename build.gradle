buildscript {
    ext.projectVersion = '0.0.8'
    ext.projectName = 'kotlin-redux-reselect'
    ext.projectGroup = 'com.github.etalisoft'
    ext.projectDesc = 'A Redux implementation for Kotlin'
    ext.projectHost = 'github'
    ext.projectUrl = 'https://github.com/etalisoft/kotlin-redux-reselect'
    ext.projectOrg = 'etalisoft-gh'
    ext.projectLicense = 'MIT'
    ext.projectLicenseUrl = 'http://opensource.org/licenses/MIT'
    ext.projectDevNick = 'etalisoft'
    ext.projectDevName = 'Jason Whitted'
    ext.projectInceptionYear = 2020

    ext.junit_version = '5.6.2'

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
}

group 'com.github.etalisoft'
version '1.0-SNAPSHOT'

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    testCompile 'com.willowtreeapps.assertk:assertk-jvm:0.22'
    testImplementation("org.junit.jupiter:junit-jupiter:$junit_version")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        'kotlin-redux-reselect'(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            groupId = projectGroup
            artifactId = projectName
            version = projectVersion

            pom {
                name = projectName
                description = projectDesc
                url = projectUrl
                licenses {
                    license {
                        name = projectLicense
                        url = projectLicenseUrl
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = projectDevNick
                        name = projectDevName
                    }
                }

                scm {
                    url = projectUrl + ".git"
                }
            }
        }
    }
}

def publishUser = (rootProject.findProperty("BINTRAY_USER") ?: project.findProperty("bintrayUser") ?: System.getenv("BINTRAY_USER"))?.toString()
def publishPassword = (rootProject.findProperty("BINTRAY_KEY") ?: project.findProperty("bintrayApiKey") ?: System.getenv("BINTRAY_API_KEY") ?: System.getenv("BINTRAY_KEY"))?.toString()

if (publishUser == null || publishPassword == null) {
    println("Required BINTRAY_USER and BINTRAY_KEY in ~/.gradle/gradle.properties")
}

bintray {
    user = publishUser
    key = publishPassword
    publications = ['kotlin-redux-reselect']
    publish = false
    pkg {
        repo = 'maven'
        name = projectName
        userOrg = projectOrg
        licenses = [projectLicense]
        desc = projectDesc
        labels = ['kotlin', 'redux', 'memoized-selectors']
        vcsUrl = projectUrl + ".git"
        websiteUrl = projectUrl
        issueTrackerUrl = projectUrl + "/issues"

        githubRepo = 'etalisoft/kotlin-redux-reselect'
        version {
            name = projectVersion
        }
    }
}
